
formulas(assumptions).

 %a number must be assigned to each square
 a0 = 0 | a0 = 1 | a0 = 2 | a0 = 3.  %first line, first column 
 a1 = 0 | a1 = 1 | a1 = 2 | a1 = 3.  %second line, first column 
 a2 = 0 | a2 = 1 | a2 = 2 | a2 = 3. 
 a3 = 0 | a3 = 1 | a3 = 2 | a3 = 3. 

 b0 = 0 | b0 = 1 | b0 = 2 | b0 = 3.  %second line, first column 
 b1 = 0 | b1 = 1 | b1 = 2 | b1 = 3. 
 b2 = 0 | b2 = 1 | b2 = 2 | b2 = 3. 
 b3 = 0 | b3 = 1 | b3 = 2 | b3 = 3. 

 c0 = 0 | c0 = 1 | c0 = 2 | c0 = 3.  
 c1 = 0 | c1 = 1 | c1 = 2 | c1 = 3. 
 c2 = 0 | c2 = 1 | c2 = 2 | c2 = 3. 
 c3 = 0 | c3 = 1 | c3 = 2 | c3 = 3. 
 
 d0 = 0 | d0 = 1 | d0 = 2 | d0 = 3.  
 d1 = 0 | d1 = 1 | d1 = 2 | d1 = 3. 
 d2 = 0 | d2 = 1 | d2 = 2 | d2 = 3. 
 d3 = 0 | d3 = 1 | d3 = 2 | d3 = 3. 

 %no more than one number is assigned to a square
 (u = x & u = y) -> x = y. 


 %defining the "mutually distinct" relation for 4 variables
 alldiff(x,y,z,u) -> (x != y) & (x != z) & (x != u) & 
                     (y != z) & (y != u) & (z != u).
 
 %Sudoku rule: numbers in a line must be different from each other 
 alldiff(a0,a1,a2,a3). %first line 
 alldiff(b0,b1,b2,b3). %second line
 alldiff(c0,c1,c2,c3). 
 alldiff(d0,d1,d2,d3). 

 %Sudoku rule: numbers in a column must be different from each other 
 alldiff(a0,b0,c0,d0). %first column
 alldiff(a1,b1,c1,d1). 
 alldiff(a2,b2,c2,d2). 
 alldiff(a3,b3,c3,d3). 

 %Sudoku rule: numbers in squares must be different from each other 
 alldiff(a0,a1,b0,b1). %top left square
 alldiff(a2,a3,b2,b3). %top right square
 alldiff(c0,c1,d0,d1). %bottom left square
 alldiff(c2,c3,d2,d3). %bottom right square 
 
 %initial hints
%b1 = 2.
%b3 = 1.
%c0 = 3.
%c2 = 2.
 
 %initial hints - alternative problem
%b1 = 0.
%b3 = 2.
%c0 = 3.
%c2 = 0.
 
end_of_list.
                      
