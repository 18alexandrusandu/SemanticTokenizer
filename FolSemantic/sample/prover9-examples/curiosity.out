============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 3424 was started by srazvan on asusnegru.localdomain,
Mon Nov 20 06:17:21 2017
The command was "prover9 -f curiosity.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file curiosity.in

set(binary_resolution).

formulas(assumptions).
(all x ((all y (Animal(y) -> Loves(x,y))) -> (exists y Loves(y,x)))).
(all x ((exists z (Animal(z) & Kills(x,z))) -> (all y -Loves(y,x)))).
(all x (Animal(x) -> Loves(Jack,x))).
Kills(Jack,Tuna) | Kills(Curiosity,Tuna).
Cat(Tuna).
(all x (Cat(x) -> Animal(x))).
end_of_list.

formulas(goals).
Kills(Curiosity,Tuna).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x ((all y (Animal(y) -> Loves(x,y))) -> (exists y Loves(y,x)))) # label(non_clause).  [assumption].
2 (all x ((exists z (Animal(z) & Kills(x,z))) -> (all y -Loves(y,x)))) # label(non_clause).  [assumption].
3 (all x (Animal(x) -> Loves(Jack,x))) # label(non_clause).  [assumption].
4 (all x (Cat(x) -> Animal(x))) # label(non_clause).  [assumption].
5 Kills(Curiosity,Tuna) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
Animal(f1(x)) | Loves(f2(x),x).  [clausify(1)].
-Loves(x,f1(x)) | Loves(f2(x),x).  [clausify(1)].
-Animal(x) | -Kills(y,x) | -Loves(z,y).  [clausify(2)].
-Animal(x) | Loves(Jack,x).  [clausify(3)].
Kills(Jack,Tuna) | Kills(Curiosity,Tuna).  [assumption].
Cat(Tuna).  [assumption].
-Cat(x) | Animal(x).  [clausify(4)].
-Kills(Curiosity,Tuna).  [deny(5)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating Animal/1
6 -Animal(x) | -Kills(y,x) | -Loves(z,y).  [clausify(2)].
7 Animal(f1(x)) | Loves(f2(x),x).  [clausify(1)].
Derived: -Kills(x,f1(y)) | -Loves(z,x) | Loves(f2(y),y).  [resolve(6,a,7,a)].
8 -Animal(x) | Loves(Jack,x).  [clausify(3)].
Derived: Loves(Jack,f1(x)) | Loves(f2(x),x).  [resolve(8,a,7,a)].
9 -Cat(x) | Animal(x).  [clausify(4)].
Derived: -Cat(x) | -Kills(y,x) | -Loves(z,y).  [resolve(9,b,6,a)].
Derived: -Cat(x) | Loves(Jack,x).  [resolve(9,b,8,a)].

Eliminating Cat/1
10 -Cat(x) | -Kills(y,x) | -Loves(z,y).  [resolve(9,b,6,a)].
11 Cat(Tuna).  [assumption].
Derived: -Kills(x,Tuna) | -Loves(y,x).  [resolve(10,a,11,a)].
12 -Cat(x) | Loves(Jack,x).  [resolve(9,b,8,a)].
Derived: Loves(Jack,Tuna).  [resolve(12,a,11,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ Loves, Kills ]).
Function symbol precedence:  function_order([ Jack, Tuna, Curiosity, f1, f2 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      13 -Loves(x,f1(x)) | Loves(f2(x),x).  [clausify(1)].
kept:      14 Kills(Jack,Tuna) | Kills(Curiosity,Tuna).  [assumption].
kept:      15 -Kills(Curiosity,Tuna).  [deny(5)].
kept:      16 -Kills(x,f1(y)) | -Loves(z,x) | Loves(f2(y),y).  [resolve(6,a,7,a)].
kept:      17 Loves(Jack,f1(x)) | Loves(f2(x),x).  [resolve(8,a,7,a)].
kept:      18 -Kills(x,Tuna) | -Loves(y,x).  [resolve(10,a,11,a)].
kept:      19 Loves(Jack,Tuna).  [resolve(12,a,11,a)].
kept:      20 Kills(Jack,Tuna).  [back_unit_del(14),unit_del(b,15)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
13 -Loves(x,f1(x)) | Loves(f2(x),x).  [clausify(1)].
15 -Kills(Curiosity,Tuna).  [deny(5)].
16 -Kills(x,f1(y)) | -Loves(z,x) | Loves(f2(y),y).  [resolve(6,a,7,a)].
17 Loves(Jack,f1(x)) | Loves(f2(x),x).  [resolve(8,a,7,a)].
18 -Kills(x,Tuna) | -Loves(y,x).  [resolve(10,a,11,a)].
19 Loves(Jack,Tuna).  [resolve(12,a,11,a)].
20 Kills(Jack,Tuna).  [back_unit_del(14),unit_del(b,15)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=8): 13 -Loves(x,f1(x)) | Loves(f2(x),x).  [clausify(1)].

given #2 (I,wt=3): 15 -Kills(Curiosity,Tuna).  [deny(5)].

given #3 (I,wt=11): 16 -Kills(x,f1(y)) | -Loves(z,x) | Loves(f2(y),y).  [resolve(6,a,7,a)].

given #4 (I,wt=8): 17 Loves(Jack,f1(x)) | Loves(f2(x),x).  [resolve(8,a,7,a)].

given #5 (I,wt=6): 18 -Kills(x,Tuna) | -Loves(y,x).  [resolve(10,a,11,a)].

given #6 (I,wt=3): 19 Loves(Jack,Tuna).  [resolve(12,a,11,a)].

given #7 (I,wt=3): 20 Kills(Jack,Tuna).  [back_unit_del(14),unit_del(b,15)].

given #8 (A,wt=3): 21 -Kills(Tuna,Tuna).  [ur(18,b,19,a)].

given #9 (F,wt=3): 22 -Loves(x,Jack).  [resolve(20,a,18,a)].

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 20.
% Level of proof is 6.
% Maximum clause weight is 8.000.
% Given clauses 9.

1 (all x ((all y (Animal(y) -> Loves(x,y))) -> (exists y Loves(y,x)))) # label(non_clause).  [assumption].
2 (all x ((exists z (Animal(z) & Kills(x,z))) -> (all y -Loves(y,x)))) # label(non_clause).  [assumption].
3 (all x (Animal(x) -> Loves(Jack,x))) # label(non_clause).  [assumption].
4 (all x (Cat(x) -> Animal(x))) # label(non_clause).  [assumption].
5 Kills(Curiosity,Tuna) # label(non_clause) # label(goal).  [goal].
6 -Animal(x) | -Kills(y,x) | -Loves(z,y).  [clausify(2)].
7 Animal(f1(x)) | Loves(f2(x),x).  [clausify(1)].
8 -Animal(x) | Loves(Jack,x).  [clausify(3)].
9 -Cat(x) | Animal(x).  [clausify(4)].
10 -Cat(x) | -Kills(y,x) | -Loves(z,y).  [resolve(9,b,6,a)].
11 Cat(Tuna).  [assumption].
13 -Loves(x,f1(x)) | Loves(f2(x),x).  [clausify(1)].
14 Kills(Jack,Tuna) | Kills(Curiosity,Tuna).  [assumption].
15 -Kills(Curiosity,Tuna).  [deny(5)].
17 Loves(Jack,f1(x)) | Loves(f2(x),x).  [resolve(8,a,7,a)].
18 -Kills(x,Tuna) | -Loves(y,x).  [resolve(10,a,11,a)].
20 Kills(Jack,Tuna).  [back_unit_del(14),unit_del(b,15)].
22 -Loves(x,Jack).  [resolve(20,a,18,a)].
23 Loves(Jack,f1(Jack)).  [resolve(22,a,17,b)].
25 $F.  [ur(13,b,22,a),unit_del(a,23)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=9. Generated=14. Kept=12. proofs=1.
Usable=9. Sos=0. Demods=0. Limbo=2, Disabled=15. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=1. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=1.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1. Nonunit_bsub_feature_tests=6.
Megabytes=0.06.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 3424 exit (max_proofs) Mon Nov 20 06:17:21 2017
